/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client.ui;

import common.Authorization;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.DefaultComboBoxModel;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;

/**
 *
 * @author yzj
 */
public class AuthorizationWindow extends javax.swing.JDialog {
    private boolean confirmFlag;
    
    /**
     * Creates new form AuthorizationDialog
     */
    public AuthorizationWindow(JFrame mainFrame) {
        super(mainFrame, true);
        confirmFlag=false;
        initComponents();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tipLabel = new JLabel();
        statusComboBox = new JComboBox<>();
        confirmButton = new JButton();

        FormListener formListener = new FormListener();

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("修改权限");
        setResizable(false);

        tipLabel.setFont(new Font("微软雅黑", 0, 14)); // NOI18N
        tipLabel.setText("权限");

        statusComboBox.setFont(new Font("微软雅黑", 0, 14)); // NOI18N
        statusComboBox.setModel(new DefaultComboBoxModel<>(new String[] { "公开", "仅对自己可见" }));

        confirmButton.setFont(new Font("微软雅黑", 0, 14)); // NOI18N
        confirmButton.setText("确定");
        confirmButton.addActionListener(formListener);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(tipLabel)
                        .addGap(18, 18, 18)
                        .addComponent(statusComboBox, GroupLayout.PREFERRED_SIZE, 172, GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(confirmButton)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(tipLabel, GroupLayout.PREFERRED_SIZE, 21, GroupLayout.PREFERRED_SIZE)
                    .addComponent(statusComboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(confirmButton)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements ActionListener {
        FormListener() {}
        public void actionPerformed(ActionEvent evt) {
            if (evt.getSource() == confirmButton) {
                AuthorizationWindow.this.confirmButtonActionPerformed(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    private void confirmButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        if (getAuthorization()==null){
            JOptionPane.showMessageDialog
                (this,"请选择正确的选项",null,JOptionPane.WARNING_MESSAGE);
            return;
        }
        confirmFlag=true;
        this.setVisible(false);
    }//GEN-LAST:event_confirmButtonActionPerformed

    public Authorization getAuthorization(){
        int index=statusComboBox.getSelectedIndex();
        if (index==-1)
            return null;
        else if (index==0)
            return Authorization.open;
        else 
            return Authorization.self;
    }
    
    public boolean isConfirmed(){
        return confirmFlag;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    JButton confirmButton;
    JComboBox<String> statusComboBox;
    JLabel tipLabel;
    // End of variables declaration//GEN-END:variables
}
