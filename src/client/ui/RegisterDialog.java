/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client.ui;
      
import client.IBusinessLogic;
import common.Credential;
import common.RegisterResult;
import java.awt.Color;
import java.awt.Font;
import java.awt.GraphicsEnvironment;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.IOException;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.SwingConstants;
import javax.swing.WindowConstants;

/**
 *
 * @author yzj
 */
public class RegisterDialog extends javax.swing.JDialog {
    private final IBusinessLogic m_Business;
    /**
     * Creates new form NewJDialog
     * @param loginDialog
     * @param business
     */
    public RegisterDialog(JDialog loginDialog, IBusinessLogic business) {
        super(loginDialog, true);
        m_Business=business;
        initComponents();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new JLabel();
        userIDLabel = new JLabel();
        userIDField = new JTextField();
        passwdLabel = new JLabel();
        passwdField = new JPasswordField();
        registerButton = new JButton();
        userIDTip = new JLabel();
        passwdTip = new JLabel();
        passwdAgainLabel = new JLabel();
        passwordAgainField = new JPasswordField();
        passwdAgainTip = new JLabel();

        FormListener formListener = new FormListener();

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("云协作");
        setLocation(null);
        setResizable(false);

        titleLabel.setFont(new Font("微软雅黑", 0, 18)); // NOI18N
        titleLabel.setHorizontalAlignment(SwingConstants.CENTER);
        titleLabel.setText("注册云协作账号");

        userIDLabel.setFont(new Font("微软雅黑", 0, 14)); // NOI18N
        userIDLabel.setHorizontalAlignment(SwingConstants.CENTER);
        userIDLabel.setText("登录名");

        userIDField.setFont(new Font("Consolas", 0, 12)); // NOI18N

        passwdLabel.setFont(new Font("微软雅黑", 0, 14)); // NOI18N
        passwdLabel.setText("登录密码");

        passwdField.setFont(new Font("Consolas", 0, 12)); // NOI18N

        registerButton.setFont(new Font("微软雅黑", 0, 16)); // NOI18N
        registerButton.setText("确认注册");
        registerButton.addActionListener(formListener);

        userIDTip.setFont(new Font("微软雅黑", 0, 12)); // NOI18N
        userIDTip.setForeground(new Color(153, 153, 153));
        userIDTip.setText("1~64位用户名，仅含数字，字母，_和-");

        passwdTip.setFont(new Font("微软雅黑", 0, 12)); // NOI18N
        passwdTip.setForeground(new Color(153, 153, 153));
        passwdTip.setText("8~64位密码，仅含数字，字母，_和-");

        passwdAgainLabel.setFont(new Font("微软雅黑", 0, 14)); // NOI18N
        passwdAgainLabel.setText("确认密码");

        passwordAgainField.setFont(new Font("Consolas", 0, 12)); // NOI18N

        passwdAgainTip.setFont(new Font("微软雅黑", 0, 12)); // NOI18N
        passwdAgainTip.setForeground(new Color(153, 153, 153));
        passwdAgainTip.setText("请再次输入密码");

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                            .addComponent(passwdLabel)
                            .addComponent(userIDLabel, GroupLayout.PREFERRED_SIZE, 42, GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                    .addComponent(passwdTip, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(userIDTip, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                            .addComponent(passwdField, GroupLayout.Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 216, GroupLayout.PREFERRED_SIZE)
                                            .addComponent(userIDField, GroupLayout.Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 216, GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 15, Short.MAX_VALUE)))
                                .addGap(37, 37, 37))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(titleLabel)
                                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(passwdAgainLabel)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(passwdAgainTip)
                            .addComponent(passwordAgainField, GroupLayout.PREFERRED_SIZE, 216, GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(141, 141, 141)
                .addComponent(registerButton, GroupLayout.PREFERRED_SIZE, 98, GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(userIDField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(userIDLabel))
                .addGap(4, 4, 4)
                .addComponent(userIDTip)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addComponent(passwdLabel)
                    .addComponent(passwdField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwdTip)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(passwdAgainLabel)
                    .addComponent(passwordAgainField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwdAgainTip)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(registerButton, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements ActionListener {
        FormListener() {}
        public void actionPerformed(ActionEvent evt) {
            if (evt.getSource() == registerButton) {
                RegisterDialog.this.registerConfirm(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    private void registerConfirm(ActionEvent evt) {//GEN-FIRST:event_registerConfirm
        String userID=userIDField.getText();
        String password=new String(passwdField.getPassword());
        String passwdAgain=new String(passwordAgainField.getPassword());
        Credential cred=new Credential(userID,password);
        try {
            RegisterResult result=m_Business.register(cred,passwdAgain);
            switch(result){
                case OK:
                    JOptionPane.showMessageDialog
                    (this,"注册成功！",null,JOptionPane.INFORMATION_MESSAGE);
                    break;
                case illegalID:
                    JOptionPane.showMessageDialog
                    (this,"请输入合法的用户名！",null,JOptionPane.WARNING_MESSAGE);
                    break;
                case illegalPassword:
                    JOptionPane.showMessageDialog
                    (this,"请输入合法的密码！",null,JOptionPane.WARNING_MESSAGE);
                    break;
                case notMatch:
                    JOptionPane.showMessageDialog
                    (this,"请确认两次输入的密码是否一致！",null,JOptionPane.WARNING_MESSAGE);
                    break;
                case usedID:
                    JOptionPane.showMessageDialog
                    (this,"该用户名已被使用！",null,JOptionPane.WARNING_MESSAGE);
                    break;
                default:
                    JOptionPane.showMessageDialog
                    (this,"未知错误",null,JOptionPane.ERROR_MESSAGE);
                    break;
            }
        }  catch (IOException e1) {
            JOptionPane.showMessageDialog
            (this, "网络错误",null,JOptionPane.ERROR_MESSAGE);
        } 
    }//GEN-LAST:event_registerConfirm


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JLabel passwdAgainLabel;
    private JLabel passwdAgainTip;
    private JPasswordField passwdField;
    private JLabel passwdLabel;
    private JLabel passwdTip;
    private JPasswordField passwordAgainField;
    private JButton registerButton;
    private JLabel titleLabel;
    private JTextField userIDField;
    private JLabel userIDLabel;
    private JLabel userIDTip;
    // End of variables declaration//GEN-END:variables
}
