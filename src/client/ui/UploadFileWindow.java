/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client.ui;

import client.IBusinessLogic;
import common.UploadFileResult;

import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;

import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.WindowConstants;

import org.apache.http.client.ClientProtocolException;

/**
 *
 * @author yzj
 */
public class UploadFileWindow extends javax.swing.JDialog {
    private final JFrame m_MainFrame;
    private final IBusinessLogic m_Business;

    /**
     * Creates new form uploadFileWindow
     */
    public UploadFileWindow(JFrame mainFrame,IBusinessLogic business) {
        super(mainFrame, true);
        m_MainFrame=mainFrame;
        m_Business=business;
        initComponents();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filePathLabel = new JLabel();
        pathField = new JTextField();
        pathButton = new JButton();
        filenameLabel = new JLabel();
        filenameField = new JTextField();
        confirmButton = new JButton();

        FormListener formListener = new FormListener();

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("上传文件");
        setResizable(false);

        filePathLabel.setFont(new Font("微软雅黑", 0, 14)); // NOI18N
        filePathLabel.setText("本地路径");

        pathField.setFont(new Font("Times New Roman", 0, 14)); // NOI18N

        pathButton.setFont(new Font("微软雅黑", 0, 14)); // NOI18N
        pathButton.setText("浏览");
        pathButton.addActionListener(formListener);

        filenameLabel.setFont(new Font("微软雅黑", 0, 14)); // NOI18N
        filenameLabel.setText("文件名");

        filenameField.setFont(new Font("Times New Roman", 0, 14)); // NOI18N

        confirmButton.setFont(new Font("微软雅黑", 0, 14)); // NOI18N
        confirmButton.setText("确定");
        confirmButton.addActionListener(formListener);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(filePathLabel)
                            .addComponent(filenameLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                            .addComponent(pathField, GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                            .addComponent(filenameField))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pathButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(confirmButton)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(filePathLabel)
                    .addComponent(pathField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(pathButton))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(filenameLabel)
                    .addComponent(filenameField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(confirmButton)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements ActionListener {
        FormListener() {}
        public void actionPerformed(ActionEvent evt) {
            if (evt.getSource() == pathButton) {
                UploadFileWindow.this.pathButtonActionPerformed(evt);
            }
            else if (evt.getSource() == confirmButton) {
                UploadFileWindow.this.confirmButtonActionPerformed(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    private void confirmButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        String filePath=pathField.getText();
        String filename=filenameField.getText();
        UploadFileResult result;
        try {
            result = m_Business.uploadFile(filename, filePath);
            switch(result){
            case OK:
                JOptionPane.showMessageDialog
                (this,"上传成功",null,JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
                break;
            case tooLarge:
                JOptionPane.showMessageDialog
                (this,"文件过大，请重新选择",null,JOptionPane.WARNING_MESSAGE);
                break;
            case unAuthorized:
                JOptionPane.showMessageDialog
                (this,"您未登录，请重新登录",null,JOptionPane.WARNING_MESSAGE);
                break;
            case wrong:
                JOptionPane.showMessageDialog
                (this,"文件不存在，请重新选择",null,JOptionPane.WARNING_MESSAGE);
                break;
            default:
                JOptionPane.showMessageDialog
                (this,"未知错误",null,JOptionPane.ERROR_MESSAGE);
                break;
            
            }
        }  catch (IOException e) {
            JOptionPane.showMessageDialog
            (this,"网络错误",null,JOptionPane.ERROR_MESSAGE);
        } 
    }//GEN-LAST:event_confirmButtonActionPerformed

    private void pathButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_pathButtonActionPerformed
        JFileChooser fileWindow = new JFileChooser();
        int confirm = fileWindow.showOpenDialog(null);
        if (confirm == JFileChooser.APPROVE_OPTION) {
                String filePath = fileWindow.getSelectedFile().getPath();
                String filename = fileWindow.getSelectedFile().getName();
                pathField.setText(filePath);
                filenameField.setText(filename);
        }
    }//GEN-LAST:event_pathButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    JButton confirmButton;
    JLabel filePathLabel;
    JTextField filenameField;
    JLabel filenameLabel;
    JButton pathButton;
    JTextField pathField;
    // End of variables declaration//GEN-END:variables
}
