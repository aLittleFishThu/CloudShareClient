/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client.ui;

import client.IBusinessLogic;
import common.CloudFile;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.WindowConstants;


/**
 *
 * @author yzj
 */
public class DownloadFileWindow extends javax.swing.JDialog {
    private final CloudFile m_CloudFile;
    private final byte[] content;
    /**
     * Creates new form uploadFileWindow
     * @param mainFrame
     * @param business
     */
    public DownloadFileWindow(JFrame mainFrame,CloudFile cloudFile,byte[] content) {
        super(mainFrame, true);
        m_CloudFile=cloudFile;
        this.content=content;
        initComponents();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filenameLabel = new JLabel();
        filenameField = new JTextField();
        filePathLabel = new JLabel();
        pathField = new JTextField();
        pathButton = new JButton();
        confirmButton = new JButton();

        FormListener formListener = new FormListener();

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("下载文件");
        setResizable(false);

        filenameLabel.setFont(new Font("微软雅黑", 0, 14)); // NOI18N
        filenameLabel.setText("文件名");

        filenameField.setFont(new Font("微软雅黑", 0, 14)); // NOI18N
        filenameField.setText(m_CloudFile.getFilename());

        filePathLabel.setFont(new Font("微软雅黑", 0, 14)); // NOI18N
        filePathLabel.setText("下载到");

        pathField.setFont(new Font("微软雅黑", 0, 14)); // NOI18N

        pathButton.setFont(new Font("微软雅黑", 0, 14)); // NOI18N
        pathButton.setText("浏览");
        pathButton.addActionListener(formListener);

        confirmButton.setFont(new Font("微软雅黑", 0, 14)); // NOI18N
        confirmButton.setText("确定");
        confirmButton.addActionListener(formListener);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(filenameLabel)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(filenameField, GroupLayout.PREFERRED_SIZE, 213, GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(filePathLabel)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pathField, GroupLayout.PREFERRED_SIZE, 213, GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pathButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(confirmButton)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(filenameLabel)
                    .addComponent(filenameField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(filePathLabel)
                    .addComponent(pathButton)
                    .addComponent(pathField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(confirmButton)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements ActionListener {
        FormListener() {}
        public void actionPerformed(ActionEvent evt) {
            if (evt.getSource() == pathButton) {
                DownloadFileWindow.this.pathButtonActionPerformed(evt);
            }
            else if (evt.getSource() == confirmButton) {
                DownloadFileWindow.this.confirmButtonActionPerformed(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    private void confirmButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        String filePath=pathField.getText();
        String filename=filenameField.getText();
        if (filename.equals("")){
            JOptionPane.showMessageDialog
                (this,"请输入文件名",null,JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (filePath.equals("")){
            JOptionPane.showMessageDialog
                (this,"请选择下载路径",null,JOptionPane.WARNING_MESSAGE);
            return;
        }
        File file=new File(filePath+"\\"+filename);
        if (file.exists()){
            int confirm=JOptionPane.showConfirmDialog(this, "检测到同名文件，是否覆盖？", "警告", JOptionPane.OK_CANCEL_OPTION);
            if (confirm==JOptionPane.CANCEL_OPTION){
                return;
            }
        }
                
        FileOutputStream fos;
        try {
            fos = new FileOutputStream(file);
            fos.write(content);
            fos.close();
            JOptionPane.showMessageDialog
            (this,"下载完成",null,JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
        } catch (FileNotFoundException e) {
            JOptionPane.showMessageDialog
            (this,"请输入正确的路径",null,JOptionPane.ERROR_MESSAGE);
        } catch (IOException e) {
            JOptionPane.showMessageDialog
            (this,"IO异常",null,JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_confirmButtonActionPerformed

    private void pathButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_pathButtonActionPerformed
        JFileChooser fileWindow = new JFileChooser();
        fileWindow.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int confirm = fileWindow.showOpenDialog(null);
        if (confirm == JFileChooser.APPROVE_OPTION) {
                String parentPath = fileWindow.getSelectedFile().getAbsolutePath();
                String directoryName=fileWindow.getSelectedFile().getName();
                String filePath=parentPath+"\\"+directoryName;
                pathField.setText(filePath);
        }
    }//GEN-LAST:event_pathButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    JButton confirmButton;
    JLabel filePathLabel;
    JTextField filenameField;
    JLabel filenameLabel;
    JButton pathButton;
    JTextField pathField;
    // End of variables declaration//GEN-END:variables
}
